data $ahoj.0 = { b "Guten Tag!", b 0 }
data $main.1 = { b "%d - %s\n", b 0 }
data $main.2 = { b "xdd: %f\n", b 0 }
data $main.3 = { b "gumi %s hm?\n", b 0 }
function l $ahoj() {
@start
    ret $ahoj.0
    # ^ return statement
}
# ^ function declaration

export function w $main() {
@start
    %xdd.addr.6 =l alloc8 4
    %tmp.7 =s div s_58, s_10
    # ^ float literal statement

    stores %tmp.7, %xdd.addr.6
    %xdd.6 =s loads %xdd.addr.6
    # ^ declaration statement

    %lol.addr.8 =l alloc8 1
    %tmp.9 =l call $ahoj()
    # ^ function call

    storel %tmp.9, %lol.addr.8
    %lol.8 =l loadl %lol.addr.8
    # ^ declaration statement

    %tmp.12 =l add 5, 7
    # ^ binary expression

    %tmp.10 =w call $printf(l $main.1, ..., w %tmp.12, l %lol.8)
    # ^ function call

    %tmp.18 =d div d_58, d_10
    # ^ float literal statement

    %tmp.16 =w call $printf(l $main.2, ..., d %tmp.18)
    # ^ function call

    %tmp.21 =l call $ahoj()
    # ^ function call

    %tmp.19 =w call $printf(l $main.3, ..., l %tmp.21)
    # ^ function call

    ret 0
    # ^ return statement
}
# ^ function declaration
