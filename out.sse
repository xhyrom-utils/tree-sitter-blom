data $main.0 = { b "%d - %d\n", b 0 }
data $main.1 = { b "xdd: %f\n", b 0 }
data $main.2 = { b "gumi %d hm?\n", b 0 }
function w $ahoj(w %a.0) {
@start
    %tmp.4 =w add %a.0, 9
    # ^ binary expression

    ret %tmp.4
    # ^ return statement
}
# ^ function declaration

export function w $main() {
@start
    %xdd.addr.8 =l alloc8 4
    %tmp.9 =s div s_58, s_10
    # ^ float literal statement

    stores %tmp.9, %xdd.addr.8
    %xdd.8 =s loads %xdd.addr.8
    # ^ declaration statement

    %lol.addr.10 =l alloc8 4
    %tmp.11 =w call $ahoj(w 9)
    # ^ function call

    storew %tmp.11, %lol.addr.10
    %lol.10 =w loadw %lol.addr.10
    # ^ declaration statement

    %tmp.15 =w add 5, 7
    # ^ binary expression

    %tmp.13 =w call $printf(l $main.0, ..., w %tmp.15, w %lol.10)
    # ^ function call

    %tmp.21 =d div d_58, d_10
    # ^ float literal statement

    %tmp.19 =w call $printf(l $main.1, ..., d %tmp.21)
    # ^ function call

    %tmp.24 =w call $ahoj(w 9)
    # ^ function call

    %tmp.22 =w call $printf(l $main.2, ..., w %tmp.24)
    # ^ function call

    ret 0
    # ^ return statement
}
# ^ function declaration

